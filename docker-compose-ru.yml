version: '3.8'

services:
  # Сервис API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://fradect:fradect@postgres:5432/fradect
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./models:/app/models
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=fradect
      - POSTGRES_PASSWORD=fradect
      - POSTGRES_DB=fradect
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Кэш Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # MLflow для управления моделями машинного обучения
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.9.1
    ports:
      - "5000:5000"
    environment:
      - BACKEND_STORE_URI=postgresql://fradect:fradect@postgres:5432/mlflow
      - ARTIFACT_ROOT=/mlflow/artifacts
    depends_on:
      - postgres
    volumes:
      - mlflow_data:/mlflow
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://fradect:fradect@postgres:5432/mlflow --default-artifact-root /mlflow/artifacts

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

  # Prometheus для сбора метрик
  prometheus:
    image: prom/prometheus:v2.48.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

# Определение томов для хранения данных
volumes:
  postgres_data:    # Данные PostgreSQL
  redis_data:       # Данные Redis
  mlflow_data:      # Артефакты MLflow
  grafana_data:     # Дашборды и настройки Grafana
  prometheus_data:  # Метрики Prometheus
